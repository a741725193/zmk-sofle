name: Build ZMK Firmware
on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Firmware build type'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - standard
        - dongle
        - reset-only
  push:
    branches:
      - main
    paths:
      - 'config/**'
      - 'boards/**'
      - 'zephyr/**'
      - '**.keymap'
      - '.github/workflows/build.yml'
      - 'build.yaml'
      - 'build-*.yaml'

jobs:
  # Try ZMK's workflow first (preferred - includes caching!)
  build-standard-zmk:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'standard' }}
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
    with:
      build_matrix_path: 'build-standard.yaml'
      archive_name: 'standard-mode-firmware'

  build-dongle-zmk:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'dongle' }}
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
    with:
      build_matrix_path: 'build-dongle.yaml'
      archive_name: 'dongle-mode-firmware'

  build-reset-zmk:
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'all' || github.event.inputs.build_type == 'reset-only' }}
    uses: zmkfirmware/zmk/.github/workflows/build-user-config.yml@main
    with:
      build_matrix_path: 'build-reset.yaml'
      archive_name: 'settings-reset-firmware'

  create-packages:
    runs-on: ubuntu-latest
    needs: [build-standard-zmk, build-dongle-zmk, build-reset-zmk]
    if: always() && (github.event_name != 'workflow_dispatch' || github.event.inputs.build_type == 'all')
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download standard firmware
        if: needs.build-standard-zmk.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: standard-mode-firmware
          path: standard-artifacts

      - name: Download dongle firmware
        if: needs.build-dongle-zmk.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: dongle-mode-firmware
          path: dongle-artifacts

      - name: Download reset firmware
        if: needs.build-reset-zmk.result == 'success'
        uses: actions/download-artifact@v4
        with:
          name: settings-reset-firmware
          path: reset-artifacts

      - name: Create final packages
        run: |
          mkdir -p packages/standard-mode packages/dongle-mode
          
          # Create pairing instructions
          cat > PAIRING_INSTRUCTIONS.md << 'EOF'
          # ZMK Eyelash Sofle Keyboard Pairing Instructions
          
          **All firmware includes ZMK Studio support by default!**
          
          ## Standard Mode Package
          **Files:** eyelash_sofle_left.uf2 + eyelash_sofle_right.uf2 + settings_reset.uf2
          
          1. Flash left half: eyelash_sofle_left.uf2 (central/master)
          2. Flash right half: eyelash_sofle_right.uf2 (peripheral)  
          3. Power on left first, then right - they will auto-pair
          
          ## Dongle Mode Package  
          **Files:** eyelash_sofle_dongle.uf2 + eyelash_sofle_left_peripheral.uf2 + eyelash_sofle_right_peripheral.uf2 + settings_reset.uf2
          
          1. Flash dongle: eyelash_sofle_dongle.uf2 (central)
          2. Flash left half: eyelash_sofle_left_peripheral.uf2 (peripheral)
          3. Flash right half: eyelash_sofle_right_peripheral.uf2 (peripheral)
          4. Plug in dongle, then power on left and right halves
          
          ## Troubleshooting
          If pairing fails, flash settings_reset.uf2 to ALL devices, then re-flash firmware.
          
          ## ZMK Studio
          All firmware includes ZMK Studio - connect via USB to configure keymap.
          EOF
          
          # Package standard mode
          if [ -d "standard-artifacts" ]; then
            cp standard-artifacts/*.uf2 packages/standard-mode/ 2>/dev/null || true
            if [ -d "reset-artifacts" ]; then
              cp reset-artifacts/*.uf2 packages/standard-mode/ 2>/dev/null || true
            fi
            cp PAIRING_INSTRUCTIONS.md packages/standard-mode/
          fi
          
          # Package dongle mode  
          if [ -d "dongle-artifacts" ]; then
            cp dongle-artifacts/*.uf2 packages/dongle-mode/ 2>/dev/null || true
            if [ -d "reset-artifacts" ]; then
              cp reset-artifacts/*.uf2 packages/dongle-mode/ 2>/dev/null || true
            fi
            cp PAIRING_INSTRUCTIONS.md packages/dongle-mode/
          fi

      - name: Upload Standard Mode Package
        if: needs.build-standard-zmk.result == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: STANDARD-MODE-COMPLETE
          path: packages/standard-mode/
          retention-days: 60

      - name: Upload Dongle Mode Package  
        if: needs.build-dongle-zmk.result == 'success'
        uses: actions/upload-artifact@v4
        with:
          name: DONGLE-MODE-COMPLETE
          path: packages/dongle-mode/
          retention-days: 60
